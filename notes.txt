Example 1

helloCurrentWorld is about showing how to create a new thread

We also use join and detach methods to show how to wait and not wait for these methods to complete. 


Example 2

waitingForThreadToFinish.exe

We have the function hello again, that now takes a referenced parameter

We also have a struct called func that will act as a function do to the double operator

Oops --> func --> sayHello

Oops creates a new thread to execute func

We use join to wait for the thread to complete and we find out how long it takes to execute in microseconds 


IFFFFFFFFFF we have used detach(), IFFF OOPS exists while the thread for my_func is still running, then the next call to sayHello will be accessing an already destroyed variable

Allowing a pointer or reference to a local variable to persist beyond the function exist is NEVER a good idea, and this mistake isn't immediately apparent

FOR this very reason, we should strive to make the thread function self contained AND copy the data into the thread rather than sharing the data

UNLESS we can prove the thread is guaranteed to finish before the function exists

Example 3



